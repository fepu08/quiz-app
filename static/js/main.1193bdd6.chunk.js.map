{"version":3,"sources":["config.js","components/routing/PrivateRoute.js","img/title.png","components/pages/Home.js","actions/types.js","actions/userActions.js","components/layout/alert/AlertItem.js","components/layout/alert/Alerts.js","components/pages/NameForm.js","actions/alertActions.js","components/leaderboard/Leaderboard.js","actions/questionActions.js","components/questions/QuestionItem.js","components/questions/QuestionForm.js","components/questions/Questions.js","components/quiz/QuizItem.js","components/quiz/QuizMenu.js","App.js","reducers/userReducer.js","reducers/questionReducer.js","reducers/index.js","reducers/alertReducer.js","store.js","index.js"],"names":["prefix","my_json_server","connect","state","user","name","Component","component","rest","render","props","to","Home","useEffect","document","body","id","className","src","title","alt","SET_NAME","SET_SCORE","SET_CURRENT_ANSWER","CLEAR_CURRENT_ANSWER","CLEAR_USER","SET_ALERT","REMOVE_ALERT","GET_QUESTIONS","SEARCH_QUESTION","ADD_QUESTION","UPDATE_QUESTION","DELETE_QUESTION","SET_CURRENT_QUESTION","CLEAR_CURRENT_QUESTION","QUESTIONS_ERROR","SET_LOADING","clearUser","type","AlertItem","msg","console","log","Alert","variant","alerts","undefined","length","map","alert","setName","payload","setAlert","removeAlert","Form","Group","controlId","Label","Control","onChange","e","target","value","onClick","style","width","preventDefault","uuidv4","setTimeout","Leaderboard","getQuestions","dispatch","a","setLoading","fetch","res","json","data","response","statusText","clearCurrent","setCurrent","question","deleteQuestion","method","Button","current","questions","addQuestion","JSON","stringify","headers","updateQuestion","useState","setQuestion","answer","correct","answers","setAnswers","clearFields","validateForm","thereIsACorrect","i","Row","Col","placeholder","xs","text","result","find","setAnswerText","Check","checked","push","setCorrectAnswer","block","newQuestion","disabled","setCurrentAnswer","setScore","score","currentAnswer","Container","fluid","lg","answerId","questionId","loading","clearCurrentAnswer","questionIndex","setQuestionIndex","thisIsTheLastQuestion","onExit","QuizItem","currIndex","App","exact","path","NameForm","QuizMenu","Questions","initialState","error","combineReducers","action","filter","middleware","thunk","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.1193bdd6.chunk.js","sourcesContent":["// export const prefix = '';\r\nexport const prefix = '/quiz-app';\r\nexport const alertTimeout = 5000;\r\nexport const my_json_server =\r\n  'https://my-json-server.typicode.com/fepu08/quiz-app';\r\n// export const my_json_server = '';\r\nexport const points_for_correct_answers = 100;\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { prefix } from '../../config';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst PrivateRoute = ({ user: { name }, component: Component, ...rest }) => {\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={(props) =>\r\n        name === '' ? (\r\n          <Redirect to={`${prefix}/name`} />\r\n        ) : (\r\n          <Component {...props} />\r\n        )\r\n      }\r\n    />\r\n  );\r\n};\r\n\r\nPrivateRoute.propTypes = {\r\n  user: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  user: state.user\r\n});\r\n\r\nexport default connect(mapStateToProps)(PrivateRoute);\r\n","export default __webpack_public_path__ + \"static/media/title.df70a517.png\";","import React, { useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { prefix } from '../../config';\r\nimport title from '../../img/title.png';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Home = () => {\r\n  useEffect(() => {\r\n    document.body.id = 'gb1';\r\n    //eslint-disable-next-line\r\n  }, []);\r\n\r\n  return (\r\n    <div className='menu flex-center-center-column'>\r\n      <div id='title-img-container' className='d-none d-sm-block'>\r\n        <img src={title} alt='I am Smarticus' />\r\n      </div>\r\n      <Link\r\n        to={`${prefix}/name`}\r\n        className='btn btn-primary btn-block btn-menu'\r\n      >\r\n        Start Quiz\r\n      </Link>\r\n      <Link\r\n        to={`${prefix}/questions`}\r\n        className='btn btn-secondary btn-block btn-menu'\r\n      >\r\n        Edit Questions\r\n      </Link>\r\n      <Link\r\n        to={`${prefix}/leaderboard`}\r\n        className='btn btn-danger btn-block btn-menu'\r\n      >\r\n        Leader Board\r\n      </Link>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","export const SET_NAME = 'SET_NAME';\r\nexport const SET_SCORE = 'SET_SCORE';\r\nexport const SET_CURRENT_ANSWER = 'SET_CURRENT_ANSWER';\r\nexport const CLEAR_CURRENT_ANSWER = 'CLEAR_CURRENT_ANSWER';\r\nexport const CLEAR_USER = 'CLEAR_USER';\r\nexport const SET_ALERT = 'SET_ALERT';\r\nexport const REMOVE_ALERT = 'REMOVE_ALERT';\r\nexport const GET_QUESTIONS = 'GET_QUESTIONS';\r\nexport const SEARCH_QUESTION = 'SEARCH_QUESTION';\r\nexport const ADD_QUESTION = 'ADD_QUESTION';\r\nexport const UPDATE_QUESTION = 'UPDATE_QUESTION';\r\nexport const DELETE_QUESTION = 'DELETE_QUESTION';\r\nexport const SET_CURRENT_QUESTION = 'SET_CURRENT_QUESTION';\r\nexport const CLEAR_CURRENT_QUESTION = 'CLEAR_CURRENT_QUESTION';\r\nexport const QUESTIONS_ERROR = 'QUESTIONS_ERROR';\r\nexport const SET_LOADING = 'SET_LOADING';\r\n","import {\r\n  SET_NAME,\r\n  SET_SCORE,\r\n  CLEAR_USER,\r\n  SET_CURRENT_ANSWER,\r\n  CLEAR_CURRENT_ANSWER\r\n} from './types';\r\n\r\nexport const setName = (name) => {\r\n  return {\r\n    type: SET_NAME,\r\n    payload: name\r\n  };\r\n};\r\n\r\nexport const setScore = (score) => {\r\n  return {\r\n    type: SET_SCORE,\r\n    payload: score\r\n  };\r\n};\r\n\r\nexport const setCurrentAnswer = (answer) => {\r\n  return {\r\n    type: SET_CURRENT_ANSWER,\r\n    payload: answer\r\n  };\r\n};\r\n\r\nexport const clearCurrentAnswer = () => {\r\n  return {\r\n    type: CLEAR_CURRENT_ANSWER\r\n  };\r\n};\r\n\r\nexport const clearUser = () => {\r\n  return {\r\n    type: CLEAR_USER\r\n  };\r\n};\r\n","import React from 'react';\r\nimport { Alert } from 'react-bootstrap';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst AlertItem = ({ msg, type = 'primary' }) => {\r\n  console.log(msg);\r\n  return <Alert variant={type}>{msg}</Alert>;\r\n};\r\n\r\nAlertItem.propTypes = {\r\n  msg: PropTypes.string.isRequired,\r\n  type: PropTypes.string\r\n};\r\n\r\nexport default AlertItem;\r\n","import React, { Fragment } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport AlertItem from './AlertItem';\r\n\r\nconst Alerts = ({ alerts }) => {\r\n  return (\r\n    <Fragment>\r\n      {alerts !== undefined &&\r\n        alerts.length > 0 &&\r\n        alerts.map((alert) => (\r\n          <AlertItem key={alert.id} msg={alert.msg} type={alert.type} />\r\n        ))}\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nAlerts.propTypes = {\r\n  alerts: PropTypes.array\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  alerts: state.alerts\r\n});\r\n\r\nexport default connect(mapStateToProps)(Alerts);\r\n","import React, { Fragment } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Form } from 'react-bootstrap';\r\nimport { prefix, alertTimeout } from '../../config';\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\nimport { connect } from 'react-redux';\r\nimport { setName, clearUser } from '../../actions/userActions';\r\nimport { removeAlert, setAlert } from '../../actions/alertActions';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport Alerts from '../layout/alert/Alerts';\r\n\r\nconst NameForm = ({\r\n  user: { name },\r\n  setName,\r\n  clearUser,\r\n  setAlert,\r\n  removeAlert\r\n}) => {\r\n  const onChange = (e) => {\r\n    setName(e.target.value);\r\n  };\r\n\r\n  const checkForm = (e) => {\r\n    if (name === '') {\r\n      e.preventDefault();\r\n      const alert = {\r\n        id: uuidv4(),\r\n        msg: 'Please insert your name',\r\n        type: 'danger'\r\n      };\r\n      setAlert(alert);\r\n      setTimeout(() => removeAlert(alert), alertTimeout);\r\n    }\r\n  };\r\n  return (\r\n    <div className='menu flex-center-center-column'>\r\n      <div className='name-alert'>\r\n        <Alerts />\r\n      </div>\r\n      <Form className='bg-primary name-form'>\r\n        <Form.Group controlId='name'>\r\n          <Form.Label>Name:</Form.Label>\r\n          <Form.Control\r\n            type='text'\r\n            className='form-rounded'\r\n            onChange={onChange}\r\n            value={name}\r\n          />\r\n        </Form.Group>\r\n        <div className='d-flex justify-content-between px'>\r\n          <Link\r\n            to={`${prefix}/`}\r\n            className='btn btn-danger btn-rounded'\r\n            onClick={clearUser}\r\n          >\r\n            Back\r\n          </Link>\r\n          <Link\r\n            to={`${prefix}/quiz`}\r\n            type='submit'\r\n            className='btn btn-success btn-rounded'\r\n            style={{ width: '11rem' }}\r\n            onClick={checkForm}\r\n          >\r\n            Let's Go\r\n          </Link>\r\n        </div>\r\n      </Form>\r\n    </div>\r\n  );\r\n};\r\n\r\nNameForm.propTypes = {\r\n  user: PropTypes.object.isRequired,\r\n  setName: PropTypes.func.isRequired,\r\n  clearUser: PropTypes.func.isRequired,\r\n  setAlert: PropTypes.func.isRequired,\r\n  removeAlert: PropTypes.func.isRequired\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  user: state.user\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n  setName,\r\n  clearUser,\r\n  setAlert,\r\n  removeAlert\r\n})(NameForm);\r\n","import { SET_ALERT, REMOVE_ALERT } from './types';\r\n\r\nexport const setAlert = (alert) => {\r\n  return {\r\n    type: SET_ALERT,\r\n    payload: alert\r\n  };\r\n};\r\n\r\nexport const removeAlert = (alert) => {\r\n  return {\r\n    type: REMOVE_ALERT,\r\n    payload: alert\r\n  };\r\n};\r\n","import React, {useEffect} from 'react'\r\n\r\nconst Leaderboard = () => {\r\n  useEffect(() => {\r\n    document.body.id = 'bb1';\r\n    //eslint-disable-next-line\r\n  }, []);\r\n  \r\n  return (\r\n    <div>\r\n      <h1>Leader Board</h1>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Leaderboard\r\n","import {\r\n  GET_QUESTIONS,\r\n  ADD_QUESTION,\r\n  UPDATE_QUESTION,\r\n  DELETE_QUESTION,\r\n  SET_CURRENT_QUESTION,\r\n  CLEAR_CURRENT_QUESTION,\r\n  QUESTIONS_ERROR,\r\n  SEARCH_QUESTION,\r\n  SET_LOADING\r\n} from './types';\r\nimport { my_json_server } from '../config';\r\n\r\nexport const getQuestions = () => async (dispatch) => {\r\n  try {\r\n    setLoading();\r\n    const res = await fetch(`${my_json_server}/questions`);\r\n    const data = await res.json();\r\n    dispatch({\r\n      type: GET_QUESTIONS,\r\n      payload: data\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: QUESTIONS_ERROR,\r\n      payload: err.response.statusText\r\n    });\r\n  }\r\n};\r\n\r\nexport const addQuestion = (question) => async (dispatch) => {\r\n  try {\r\n    setLoading();\r\n    const res = await fetch(`${my_json_server}/questions`, {\r\n      method: 'POST',\r\n      body: JSON.stringify(question),\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      }\r\n    });\r\n    const data = await res.json();\r\n    dispatch({\r\n      type: ADD_QUESTION,\r\n      payload: data\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: QUESTIONS_ERROR,\r\n      payload: err.response.statusText\r\n    });\r\n  }\r\n};\r\n\r\nexport const deleteQuestion = (id) => async (dispatch) => {\r\n  try {\r\n    setLoading();\r\n    await fetch(`${my_json_server}/questions/${id}`, {\r\n      method: 'DELETE'\r\n    });\r\n\r\n    dispatch({\r\n      type: DELETE_QUESTION,\r\n      payload: id\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: QUESTIONS_ERROR,\r\n      payload: err.response.statusText\r\n    });\r\n  }\r\n};\r\n\r\nexport const updateQuestion = (question) => async (dispatch) => {\r\n  try {\r\n    setLoading();\r\n    const res = await fetch(`${my_json_server}/questions/${question.id}`, {\r\n      method: 'PUT',\r\n      body: JSON.stringify(question),\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      }\r\n    });\r\n\r\n    const data = await res.json();\r\n    dispatch({\r\n      type: UPDATE_QUESTION,\r\n      payload: question\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: QUESTIONS_ERROR,\r\n      payload: err.response.statusText\r\n    });\r\n  }\r\n};\r\n\r\nexport const searchQuestion = (text) => async (dispatch) => {\r\n  try {\r\n    const res = await fetch(`${my_json_server}/questions?q=${text}`);\r\n    const data = await res.json();\r\n    dispatch({\r\n      type: SEARCH_QUESTION,\r\n      payload: data\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: QUESTIONS_ERROR,\r\n      payload: err.response.statusText\r\n    });\r\n  }\r\n};\r\n\r\nexport const setCurrent = (question) => {\r\n  return {\r\n    type: SET_CURRENT_QUESTION,\r\n    payload: question\r\n  };\r\n};\r\n\r\nexport const clearCurrent = () => {\r\n  return {\r\n    type: CLEAR_CURRENT_QUESTION\r\n  };\r\n};\r\n\r\nexport const setLoading = () => {\r\n  return {\r\n    type: SET_LOADING\r\n  };\r\n};\r\n","import React from 'react';\r\nimport { Button } from 'react-bootstrap';\r\nimport { connect } from 'react-redux';\r\nimport {\r\n  setCurrent,\r\n  clearCurrent,\r\n  deleteQuestion\r\n} from '../../actions/questionActions';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst QuestionItem = ({\r\n  question,\r\n  deleteQuestion,\r\n  setCurrent,\r\n  clearCurrent\r\n}) => {\r\n  const onDelete = () => {\r\n    deleteQuestion(question.id);\r\n    clearCurrent();\r\n  };\r\n\r\n  return (\r\n    <li className='question-item d-flex justify-content-between'>\r\n      <div className='question-item-text'>{question.question}</div>\r\n      <div>\r\n        <Button\r\n          variant={'outline-danger'}\r\n          className='question-btn question-delete-btn'\r\n          onClick={onDelete}\r\n        >\r\n          <i className='fas fa-trash'></i>\r\n        </Button>\r\n        <Button\r\n          variant={'outline-info'}\r\n          className='question-btn question-edit-btn'\r\n          onClick={() => {\r\n            setCurrent(question);\r\n          }}\r\n        >\r\n          <i className='far fa-edit'></i>\r\n        </Button>\r\n      </div>\r\n    </li>\r\n  );\r\n};\r\n\r\nQuestionItem.propTypes = {\r\n  question: PropTypes.object.isRequired,\r\n  deleteQuestion: PropTypes.func.isRequired,\r\n  setCurrent: PropTypes.func.isRequired\r\n};\r\n\r\nexport default connect(null, {\r\n  setCurrent,\r\n  deleteQuestion,\r\n  clearCurrent\r\n})(QuestionItem);\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Form, Row, Col, Button } from 'react-bootstrap';\r\nimport { connect } from 'react-redux';\r\nimport {\r\n  addQuestion,\r\n  updateQuestion,\r\n  clearCurrent\r\n} from '../../actions/questionActions';\r\nimport PropTypes from 'prop-types';\r\nimport { validate } from 'uuid';\r\n\r\nconst QuestionForm = ({\r\n  current,\r\n  addQuestion,\r\n  updateQuestion,\r\n  clearCurrent\r\n}) => {\r\n  const [question, setQuestion] = useState('');\r\n  const [answers, setAnswers] = useState([\r\n    { id: 1, answer: '', correct: false },\r\n    { id: 2, answer: '', correct: false },\r\n    { id: 3, answer: '', correct: false },\r\n    { id: 4, answer: '', correct: false }\r\n  ]);\r\n\r\n  useEffect(() => {\r\n    if (current) {\r\n      setQuestion(current.question);\r\n      setAnswers(current.answers);\r\n    } else {\r\n      clearFields();\r\n    }\r\n  }, [current]);\r\n\r\n  const onSubmit = () => {\r\n    if (validateForm()) {\r\n      let newQuestion = {\r\n        question,\r\n        answers\r\n      };\r\n\r\n      if (current !== null) {\r\n        // UPDATE QUESTION\r\n        newQuestion.id = current.id;\r\n        updateQuestion(newQuestion);\r\n      } else {\r\n        // ADD QUESTION\r\n        addQuestion(newQuestion);\r\n      }\r\n      clearFields();\r\n      clearCurrent();\r\n    } else {\r\n      console.log('Input error');\r\n    }\r\n  };\r\n\r\n  const setAnswerText = (id, text) => {\r\n    let result = [...answers];\r\n    result.find((a) => a.id === id).answer = text;\r\n    setAnswers(result);\r\n  };\r\n\r\n  const setCorrectAnswer = (id) => {\r\n    let result = [];\r\n    answers.map((a) => {\r\n      if (a.id === id) {\r\n        result.push({ id: a.id, answer: a.answer, correct: true });\r\n      } else {\r\n        result.push({ id: a.id, answer: a.answer, correct: false });\r\n      }\r\n    });\r\n    setAnswers(result);\r\n  };\r\n\r\n  const clearFields = () => {\r\n    setQuestion('');\r\n    setAnswers([\r\n      { id: 1, answer: '', correct: false },\r\n      { id: 2, answer: '', correct: false },\r\n      { id: 3, answer: '', correct: false },\r\n      { id: 4, answer: '', correct: false }\r\n    ]);\r\n  };\r\n\r\n  const validateForm = () => {\r\n    if (!question || question === '' || !answers || answers.length !== 4)\r\n      return false;\r\n    let thereIsACorrect = false;\r\n    for (let i = 0; i < answers.length; i++) {\r\n      if (!answers[i].id) return false;\r\n      if (!answers[i].answer || answers[i].answer === '') return false;\r\n      if (answers[i].correct !== true && answers[i].correct !== false)\r\n        return false;\r\n      if (answers[i].correct === true) thereIsACorrect = true;\r\n    }\r\n    if (!thereIsACorrect) return false;\r\n    return true;\r\n  };\r\n\r\n  return (\r\n    <Form className='question-form flex-center-center-column'>\r\n      <h5 className='form-label'>Question</h5>\r\n      <Row className='w-100 my-2'>\r\n        <Col>\r\n          <Form.Control\r\n            type='text'\r\n            placeholder='Enter your question'\r\n            className='form-rounded'\r\n            value={question}\r\n            onChange={(e) => setQuestion(e.target.value)}\r\n          />\r\n        </Col>\r\n      </Row>\r\n\r\n      <h5 className='form-label mt-3'>Answers</h5>\r\n      {/* Answers */}\r\n      {answers.map((a) => {\r\n        return (\r\n          <Row className='w-100 my-2' key={a.id}>\r\n            <Col xs>\r\n              <Form.Control\r\n                className='form-rounded'\r\n                type='text'\r\n                placeholder='Enter your answer'\r\n                value={a.answer}\r\n                onChange={(e) => setAnswerText(a.id, e.target.value)}\r\n              />\r\n            </Col>\r\n            <Col xs={1}>\r\n              <Form.Check\r\n                type='radio'\r\n                name='right-answer'\r\n                id='answer0-radio'\r\n                value={a.correct}\r\n                checked={a.correct}\r\n                onChange={() => setCorrectAnswer(a.id)}\r\n              />\r\n            </Col>\r\n          </Row>\r\n        );\r\n      })}\r\n\r\n      {/* Buttons */}\r\n      <Row className='my-2'>\r\n        <Col>\r\n          <Button\r\n            variant='danger'\r\n            block\r\n            className='btn-rounded'\r\n            onClick={() => {\r\n              clearCurrent();\r\n              clearFields();\r\n            }}\r\n          >\r\n            Clear\r\n          </Button>\r\n        </Col>\r\n        <Col>\r\n          <Button\r\n            variant={!validateForm() ? 'dark' : 'success'}\r\n            block\r\n            className='btn-rounded'\r\n            onClick={onSubmit}\r\n            disabled={!validateForm()}\r\n          >\r\n            Save\r\n          </Button>\r\n        </Col>\r\n      </Row>\r\n    </Form>\r\n  );\r\n};\r\n\r\nQuestionForm.propTypes = {\r\n  current: PropTypes.object,\r\n  addQuestion: PropTypes.func.isRequired,\r\n  updateQuestion: PropTypes.func.isRequired,\r\n  clearCurrent: PropTypes.func.isRequired\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  current: state.questions.current\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n  addQuestion,\r\n  updateQuestion,\r\n  clearCurrent\r\n})(QuestionForm);\r\n","import React, { useEffect } from 'react';\r\nimport QuestionItem from './QuestionItem';\r\nimport QuestionForm from './QuestionForm';\r\nimport { connect } from 'react-redux';\r\nimport { getQuestions } from '../../actions/questionActions';\r\nimport PropTypes from 'prop-types';\r\nimport { Link } from 'react-router-dom';\r\nimport { prefix } from '../../config';\r\n\r\nconst Questions = ({ questions: { questions, current }, getQuestions }) => {\r\n  useEffect(() => {\r\n    document.body.id = 'bb1';\r\n    getQuestions();\r\n    //eslint-disable-next-line\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <div className='d-flex justify-content-between'>\r\n        <h1>Questions</h1>\r\n        <div className='my-auto'>\r\n          <Link to={`${prefix}/`} className='btn btn-primary btn-rounded'>\r\n            Home\r\n          </Link>\r\n        </div>\r\n      </div>\r\n\r\n      <ul className='question-list'>\r\n        {questions !== null && questions.length !== 0 ? (\r\n          questions.map((question) => (\r\n            <QuestionItem key={question.id} question={question} />\r\n          ))\r\n        ) : (\r\n          <h3>No questions to show</h3>\r\n        )}\r\n      </ul>\r\n\r\n      <hr className='my-5' />\r\n\r\n      <QuestionForm />\r\n    </div>\r\n  );\r\n};\r\n\r\nQuestions.propTypes = {\r\n  questions: PropTypes.object.isRequired,\r\n  getQuestions: PropTypes.func.isRequired\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  questions: state.questions\r\n});\r\n\r\nexport default connect(mapStateToProps, { getQuestions })(Questions);\r\n","import React from 'react';\r\nimport { Container, Row, Button, Col } from 'react-bootstrap';\r\nimport { connect } from 'react-redux';\r\nimport { setCurrentAnswer } from '../../actions/userActions';\r\nimport { setScore } from '../../actions/userActions';\r\nimport { points_for_correct_answers } from '../../config';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Quiz = ({\r\n  question: { id, question, answers },\r\n  user: { currentAnswer, score },\r\n  setCurrentAnswer,\r\n  setScore\r\n}) => {\r\n  return (\r\n    <Container fluid>\r\n      <Row className='mb-5'>\r\n        {/* The Question */}\r\n        <Col className='quiz-item'>{question}</Col>\r\n      </Row>\r\n      {/* The Answers */}\r\n      <Row className='justify-content-between'>\r\n        {answers.map((a) => (\r\n          <Col\r\n            key={a.id}\r\n            lg={6}\r\n            className={[\r\n              'my-3',\r\n              a.id % 2 === 1 ? 'pr-lg-3 pl-lg-0' : 'pr-lg-0 pl-lg-3'\r\n            ]}\r\n          >\r\n            <Button\r\n              className={[\r\n                'd-block answer-item btn-rounded',\r\n                currentAnswer !== null &&\r\n                  (a.correct\r\n                    ? 'btn-success'\r\n                    : currentAnswer.answerId === a.id\r\n                    ? 'btn-primary'\r\n                    : 'bg-white')\r\n              ]}\r\n              onClick={() => {\r\n                setCurrentAnswer({ questionId: id, answerId: a.id });\r\n                if (a.correct && setScore(score + points_for_correct_answers));\r\n              }}\r\n              disabled={currentAnswer !== null}\r\n            >\r\n              {a.answer}\r\n            </Button>\r\n          </Col>\r\n        ))}\r\n      </Row>\r\n    </Container>\r\n  );\r\n};\r\n\r\nQuiz.propTypes = {\r\n  question: PropTypes.object.isRequired,\r\n  setCurrentAnswer: PropTypes.func.isRequired,\r\n  user: PropTypes.object.isRequired,\r\n  setScore: PropTypes.func.isRequired\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  user: state.user\r\n});\r\n\r\nexport default connect(mapStateToProps, { setCurrentAnswer, setScore })(Quiz);\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Button } from 'react-bootstrap';\r\nimport QuizItem from './QuizItem';\r\nimport { connect } from 'react-redux';\r\nimport { clearCurrent, getQuestions } from '../../actions/questionActions';\r\nimport { clearCurrentAnswer, clearUser } from '../../actions/userActions';\r\nimport PropTypes from 'prop-types';\r\nimport { Link } from 'react-router-dom';\r\nimport { prefix } from '../../config';\r\n\r\nconst QuizMenu = ({\r\n  questions,\r\n  loading,\r\n  user: { score, currentAnswer },\r\n  getQuestions,\r\n  clearCurrent,\r\n  clearCurrentAnswer,\r\n  clearUser\r\n}) => {\r\n  const [questionIndex, setQuestionIndex] = useState(0);\r\n\r\n  useEffect(() => {\r\n    getQuestions();\r\n    //eslint-disable-next-line\r\n  }, []);\r\n\r\n  const nextOnClick = () => {\r\n    if (!thisIsTheLastQuestion()) {\r\n      let currIndex = questionIndex;\r\n      setQuestionIndex((currIndex += 1));\r\n      clearCurrentAnswer();\r\n    }\r\n  };\r\n\r\n  const thisIsTheLastQuestion = () => {\r\n    if (questionIndex === questions.length - 1) return true;\r\n    else return false;\r\n  };\r\n\r\n  const onExit = () => {\r\n    clearUser();\r\n    clearCurrent();\r\n  };\r\n\r\n  if (loading || questions === null) {\r\n    return (\r\n      <div className='menu flex-center-center-column'>\r\n        <h3>Loading...</h3>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className='quiz-menu flex-center-center-column'>\r\n      <QuizItem question={questions[questionIndex]} />\r\n      <div className='w-100 d-flex justify-content-between'>\r\n        <div className='btn-rounded bg-secondary btn-score'>Score: {score}</div>\r\n        {/* Next Button or Leader Board*/}\r\n        {currentAnswer !== null &&\r\n          (!thisIsTheLastQuestion() ? (\r\n            <Button className='d-block btn-rounded' onClick={nextOnClick}>\r\n              Next\r\n            </Button>\r\n          ) : (\r\n            <div>\r\n              <Link\r\n                to={`${prefix}/leaderboard`}\r\n                className='btn btn-info btn-rounded mr-1 mr-sm-3'\r\n                onClick={onExit}\r\n              >\r\n                Leader Board\r\n              </Link>\r\n              <Link\r\n                to={`${prefix}/`}\r\n                className='btn btn-primary btn-rounded'\r\n                onClick={onExit}\r\n              >\r\n                Home\r\n              </Link>\r\n            </div>\r\n          ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nQuizMenu.propTypes = {\r\n  questions: PropTypes.array,\r\n  loading: PropTypes.bool.isRequired,\r\n  user: PropTypes.object.isRequired,\r\n  getQuestions: PropTypes.func.isRequired,\r\n  clearCurrentAnswer: PropTypes.func.isRequired,\r\n  clearUser: PropTypes.func.isRequired,\r\n  clearCurrent: PropTypes.func.isRequired\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  questions: state.questions.questions,\r\n  loading: state.questions.loading,\r\n  user: state.user\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n  getQuestions,\r\n  clearCurrentAnswer,\r\n  clearUser,\r\n  clearCurrent\r\n})(QuizMenu);\r\n","import React from 'react';\nimport './App.css';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport PrivateRoute from './components/routing/PrivateRoute';\nimport { prefix } from './config';\nimport { Container, Row } from 'react-bootstrap';\n\nimport Home from './components/pages/Home';\nimport NameForm from './components/pages/NameForm';\nimport Leaderboard from './components/leaderboard/Leaderboard';\nimport Questions from './components/questions/Questions';\nimport QuizMenu from './components/quiz/QuizMenu';\n\nconst App = () => {\n  return (\n    <Router>\n      <Container>\n        <Switch>\n          <Route exact path={`${prefix}/`} component={Home} />\n          <Route exact path={`${prefix}/name`} component={NameForm} />\n          <PrivateRoute exact path={`${prefix}/quiz`} component={QuizMenu} />\n          <Route exact path={`${prefix}/leaderboard`} component={Leaderboard} />\n          <Route exact path={`${prefix}/questions`} component={Questions} />\n        </Switch>\n      </Container>\n    </Router>\n  );\n};\n\nexport default App;\n","import {\r\n  SET_NAME,\r\n  SET_SCORE,\r\n  CLEAR_USER,\r\n  SET_CURRENT_ANSWER,\r\n  CLEAR_CURRENT_ANSWER\r\n} from '../actions/types';\r\n\r\nconst initialState = {\r\n  name: '',\r\n  score: 0,\r\n  currentAnswer: null\r\n};\r\n\r\nexport default (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case SET_NAME:\r\n      return {\r\n        ...state,\r\n        name: action.payload\r\n      };\r\n    case SET_SCORE:\r\n      return {\r\n        ...state,\r\n        score: action.payload\r\n      };\r\n    case SET_CURRENT_ANSWER:\r\n      return {\r\n        ...state,\r\n        currentAnswer: action.payload\r\n      };\r\n    case CLEAR_CURRENT_ANSWER:\r\n      return {\r\n        ...state,\r\n        currentAnswer: null\r\n      };\r\n    case CLEAR_USER:\r\n      return {\r\n        name: '',\r\n        score: 0,\r\n        currentAnswer: null\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import {\r\n  GET_QUESTIONS,\r\n  SEARCH_QUESTION,\r\n  ADD_QUESTION,\r\n  UPDATE_QUESTION,\r\n  DELETE_QUESTION,\r\n  SET_CURRENT_QUESTION,\r\n  CLEAR_CURRENT_QUESTION,\r\n  QUESTIONS_ERROR,\r\n  SET_LOADING\r\n} from '../actions/types';\r\n\r\nconst initialState = {\r\n  questions: null,\r\n  current: null,\r\n  error: null,\r\n  loading: false\r\n};\r\n\r\nexport default (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case GET_QUESTIONS:\r\n      return {\r\n        ...state,\r\n        questions: action.payload,\r\n        loading: false\r\n      };\r\n    case ADD_QUESTION:\r\n      return {\r\n        ...state,\r\n        questions: [...state.questions, action.payload],\r\n        loading: false\r\n      };\r\n    case DELETE_QUESTION:\r\n      return {\r\n        ...state,\r\n        questions: state.questions.filter(\r\n          (question) => question.id !== action.payload\r\n        ),\r\n        loading: false\r\n      };\r\n    case UPDATE_QUESTION:\r\n      return {\r\n        ...state,\r\n        questions: state.questions.map((question) =>\r\n          question.id === action.payload.id ? action.payload : question\r\n        ),\r\n        loading: false\r\n      };\r\n    case SEARCH_QUESTION:\r\n      return {\r\n        ...state,\r\n        questions: action.payload\r\n      };\r\n    case SET_CURRENT_QUESTION:\r\n      return {\r\n        ...state,\r\n        current: action.payload\r\n      };\r\n    case CLEAR_CURRENT_QUESTION:\r\n      return {\r\n        ...state,\r\n        current: null\r\n      };\r\n    case QUESTIONS_ERROR:\r\n      console.error(action.payload);\r\n      return {\r\n        ...state,\r\n        error: action.payload\r\n      };\r\n    case SET_LOADING:\r\n      return {\r\n        ...state,\r\n        loading: true\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { combineReducers } from 'redux';\r\nimport userReducer from './userReducer';\r\nimport alertReducer from './alertReducer';\r\nimport questionReducer from './questionReducer';\r\n\r\nexport default combineReducers({\r\n  user: userReducer,\r\n  alerts: alertReducer,\r\n  questions: questionReducer\r\n});\r\n","import { SET_ALERT, REMOVE_ALERT } from '../actions/types';\r\n\r\nexport default (state = [], action) => {\r\n  switch (action.type) {\r\n    case SET_ALERT:\r\n      return [...state, action.payload];\r\n    case REMOVE_ALERT:\r\n      return state.filter((alert) => alert.id !== action.payload.id);\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { createStore, applyMiddleware } from 'redux';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport thunk from 'redux-thunk';\r\nimport rootReducer from './reducers';\r\n\r\nconst initialState = {};\r\nconst middleware = [thunk];\r\nconst store = createStore(\r\n  rootReducer,\r\n  initialState,\r\n  composeWithDevTools(applyMiddleware(...middleware))\r\n);\r\n\r\nexport default store;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './custom.scss';\nimport App from './App';\nimport { Provider } from 'react-redux';\nimport store from './store';\n\nReactDOM.render(\n  <Provider store={store}>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}