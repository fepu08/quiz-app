{"version":3,"sources":["config.js","components/routing/PrivateRoute.js","img/title.png","actions/types.js","actions/alertActions.js","actions/questionActions.js","components/layout/alert/AlertItem.js","components/layout/alert/Alerts.js","components/pages/Home.js","actions/userActions.js","components/pages/NameForm.js","components/leaderboard/Leaderboard.js","components/questions/QuestionItem.js","components/questions/QuestionForm.js","components/questions/Questions.js","components/quiz/QuizItem.js","components/quiz/QuizMenu.js","App.js","reducers/userReducer.js","reducers/questionReducer.js","reducers/index.js","reducers/alertReducer.js","store.js","index.js"],"names":["my_json_server","prefix","connect","state","user","name","Component","component","rest","render","props","to","SET_NAME","SET_SCORE","SET_CURRENT_ANSWER","CLEAR_CURRENT_ANSWER","CLEAR_USER","SET_ALERT","REMOVE_ALERT","GET_QUESTIONS","SEARCH_QUESTION","ADD_QUESTION","UPDATE_QUESTION","DELETE_QUESTION","SET_CURRENT_QUESTION","CLEAR_CURRENT_QUESTION","QUESTIONS_ERROR","SET_LOADING","setAlert","alert","type","payload","id","uuidv4","getQuestions","dispatch","a","setLoading","fetch","res","json","data","response","statusText","clearCurrent","removeAlert","msg","timeout","useEffect","setTimeout","Alert","variant","alerts","undefined","length","map","questions","loading","document","body","noQuestions","className","src","title","alt","onClick","e","preventDefault","clearUser","setName","Form","Group","controlId","Label","Control","onChange","target","value","style","width","Leaderboard","setCurrent","question","deleteQuestion","method","Button","current","addQuestion","JSON","stringify","headers","updateQuestion","useState","setQuestion","answer","correct","answers","setAnswers","clearFields","validateForm","thereIsACorrect","i","Row","Col","placeholder","xs","text","result","find","setAnswerText","Check","checked","push","setCorrectAnswer","block","newQuestion","console","log","disabled","setCurrentAnswer","setScore","score","currentAnswer","Container","fluid","lg","answerId","questionId","clearCurrentAnswer","questionIndex","setQuestionIndex","thisIsTheLastQuestion","onExit","QuizItem","currIndex","App","exact","path","Home","NameForm","QuizMenu","Questions","initialState","error","combineReducers","action","filter","middleware","thunk","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.40c6d235.chunk.js","sourcesContent":["export const alert_timeout = 5000;\r\nexport const points_for_correct_answers = 1;\r\n\r\n// export const prefix = '';\r\n// export const my_json_server = '';\r\n\r\nexport const my_json_server =\r\n  'https://my-json-server.typicode.com/fepu08/quiz-app';\r\nexport const prefix = '/quiz-app';\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { prefix } from '../../config';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst PrivateRoute = ({ user: { name }, component: Component, ...rest }) => {\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={(props) =>\r\n        name === '' ? (\r\n          <Redirect to={`${prefix}/name`} />\r\n        ) : (\r\n          <Component {...props} />\r\n        )\r\n      }\r\n    />\r\n  );\r\n};\r\n\r\nPrivateRoute.propTypes = {\r\n  user: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  user: state.user\r\n});\r\n\r\nexport default connect(mapStateToProps)(PrivateRoute);\r\n","export default __webpack_public_path__ + \"static/media/title.df70a517.png\";","export const SET_NAME = 'SET_NAME';\r\nexport const SET_SCORE = 'SET_SCORE';\r\nexport const SET_CURRENT_ANSWER = 'SET_CURRENT_ANSWER';\r\nexport const CLEAR_CURRENT_ANSWER = 'CLEAR_CURRENT_ANSWER';\r\nexport const CLEAR_USER = 'CLEAR_USER';\r\nexport const SET_ALERT = 'SET_ALERT';\r\nexport const REMOVE_ALERT = 'REMOVE_ALERT';\r\nexport const GET_QUESTIONS = 'GET_QUESTIONS';\r\nexport const SEARCH_QUESTION = 'SEARCH_QUESTION';\r\nexport const ADD_QUESTION = 'ADD_QUESTION';\r\nexport const UPDATE_QUESTION = 'UPDATE_QUESTION';\r\nexport const DELETE_QUESTION = 'DELETE_QUESTION';\r\nexport const SET_CURRENT_QUESTION = 'SET_CURRENT_QUESTION';\r\nexport const CLEAR_CURRENT_QUESTION = 'CLEAR_CURRENT_QUESTION';\r\nexport const QUESTIONS_ERROR = 'QUESTIONS_ERROR';\r\nexport const SET_LOADING = 'SET_LOADING';\r\n","import { SET_ALERT, REMOVE_ALERT } from './types';\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\nexport const setAlert = (alert) => {\r\n  return {\r\n    type: SET_ALERT,\r\n    payload: { id: uuidv4(), ...alert }\r\n  };\r\n};\r\n\r\nexport const removeAlert = (alert) => {\r\n  return {\r\n    type: REMOVE_ALERT,\r\n    payload: alert\r\n  };\r\n};\r\n","import {\r\n  GET_QUESTIONS,\r\n  ADD_QUESTION,\r\n  UPDATE_QUESTION,\r\n  DELETE_QUESTION,\r\n  SET_CURRENT_QUESTION,\r\n  CLEAR_CURRENT_QUESTION,\r\n  QUESTIONS_ERROR,\r\n  SEARCH_QUESTION,\r\n  SET_LOADING\r\n} from './types';\r\nimport { my_json_server } from '../config';\r\n\r\nexport const getQuestions = () => async (dispatch) => {\r\n  try {\r\n    setLoading();\r\n    const res = await fetch(`${my_json_server}/questions`);\r\n    const data = await res.json();\r\n    dispatch({\r\n      type: GET_QUESTIONS,\r\n      payload: data\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: QUESTIONS_ERROR,\r\n      payload: err.response.statusText\r\n    });\r\n  }\r\n};\r\n\r\nexport const addQuestion = (question) => async (dispatch) => {\r\n  try {\r\n    setLoading();\r\n    const res = await fetch(`${my_json_server}/questions`, {\r\n      method: 'POST',\r\n      body: JSON.stringify(question),\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      }\r\n    });\r\n    const data = await res.json();\r\n    dispatch({\r\n      type: ADD_QUESTION,\r\n      payload: data\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: QUESTIONS_ERROR,\r\n      payload: err.response.statusText\r\n    });\r\n  }\r\n};\r\n\r\nexport const deleteQuestion = (id) => async (dispatch) => {\r\n  try {\r\n    setLoading();\r\n    await fetch(`${my_json_server}/questions/${id}`, {\r\n      method: 'DELETE'\r\n    });\r\n\r\n    dispatch({\r\n      type: DELETE_QUESTION,\r\n      payload: id\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: QUESTIONS_ERROR,\r\n      payload: err.response.statusText\r\n    });\r\n  }\r\n};\r\n\r\nexport const updateQuestion = (question) => async (dispatch) => {\r\n  try {\r\n    setLoading();\r\n    const res = await fetch(`${my_json_server}/questions/${question.id}`, {\r\n      method: 'PUT',\r\n      body: JSON.stringify(question),\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      }\r\n    });\r\n\r\n    const data = await res.json();\r\n    dispatch({\r\n      type: UPDATE_QUESTION,\r\n      payload: question\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: QUESTIONS_ERROR,\r\n      payload: err.response.statusText\r\n    });\r\n  }\r\n};\r\n\r\nexport const searchQuestion = (text) => async (dispatch) => {\r\n  try {\r\n    const res = await fetch(`${my_json_server}/questions?q=${text}`);\r\n    const data = await res.json();\r\n    dispatch({\r\n      type: SEARCH_QUESTION,\r\n      payload: data\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: QUESTIONS_ERROR,\r\n      payload: err.response.statusText\r\n    });\r\n  }\r\n};\r\n\r\nexport const setCurrent = (question) => {\r\n  return {\r\n    type: SET_CURRENT_QUESTION,\r\n    payload: question\r\n  };\r\n};\r\n\r\nexport const clearCurrent = () => {\r\n  return {\r\n    type: CLEAR_CURRENT_QUESTION\r\n  };\r\n};\r\n\r\nexport const setLoading = () => {\r\n  return {\r\n    type: SET_LOADING\r\n  };\r\n};\r\n","import React, { useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Alert } from 'react-bootstrap';\r\nimport PropTypes from 'prop-types';\r\nimport { alert_timeout } from '../../../config';\r\nimport { removeAlert } from '../../../actions/alertActions';\r\n\r\nconst AlertItem = ({\r\n  alert: { id, msg, type = 'primary' },\r\n  timeout = alert_timeout,\r\n  removeAlert\r\n}) => {\r\n  useEffect(() => {\r\n    setTimeout(() => {\r\n      removeAlert({ id, msg });\r\n    }, timeout);\r\n    //eslint-disable-next-line\r\n  }, []);\r\n  return <Alert variant={type}>{msg}</Alert>;\r\n};\r\n\r\nAlertItem.propTypes = {\r\n  alert: PropTypes.object.isRequired,\r\n  timeout: PropTypes.number,\r\n  removeAlert: PropTypes.func.isRequired\r\n};\r\n\r\nexport default connect(null, { removeAlert })(AlertItem);\r\n","import React, { Fragment } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport AlertItem from './AlertItem';\r\n\r\nconst Alerts = ({ alerts }) => {\r\n  return (\r\n    <Fragment>\r\n      {alerts !== undefined &&\r\n        alerts.length > 0 &&\r\n        alerts.map((alert) => <AlertItem key={alert.id} alert={alert} />)}\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nAlerts.propTypes = {\r\n  alerts: PropTypes.array\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  alerts: state.alerts\r\n});\r\n\r\nexport default connect(mapStateToProps)(Alerts);\r\n","import React, { useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { prefix } from '../../config';\r\nimport title from '../../img/title.png';\r\nimport { connect } from 'react-redux';\r\nimport { setAlert } from '../../actions/alertActions';\r\nimport { getQuestions } from '../../actions/questionActions';\r\nimport Alerts from '../layout/alert/Alerts';\r\nimport PropTypes from 'prop-types';\r\nimport { QUESTIONS_ERROR } from '../../actions/types';\r\n\r\nconst Home = ({\r\n  questions: { questions, loading },\r\n  setAlert,\r\n  getQuestions\r\n}) => {\r\n  useEffect(() => {\r\n    document.body.id = 'gb1';\r\n    getQuestions();\r\n    //eslint-disable-next-line\r\n  }, []);\r\n\r\n  const onClick = (e) => {\r\n    if (noQuestions()) {\r\n      e.preventDefault();\r\n      setAlert({ msg: 'There are no Questions', type: 'danger' });\r\n    }\r\n  };\r\n\r\n  const noQuestions = () => {\r\n    if (!loading && questions && questions.length === 0) return true;\r\n    else return false;\r\n  };\r\n\r\n  return (\r\n    <div className='menu flex-center-center-column'>\r\n      <div id='title-img-container' className='d-none d-sm-block'>\r\n        <img src={title} alt='I am Smarticus' />\r\n      </div>\r\n      <div className='home-alerts'>\r\n        <Alerts />\r\n      </div>\r\n      <Link\r\n        to={`${prefix}/name`}\r\n        className='btn btn-primary btn-block btn-menu'\r\n        onClick={onClick}\r\n      >\r\n        Start Quiz\r\n      </Link>\r\n      <Link\r\n        to={`${prefix}/questions`}\r\n        className='btn btn-secondary btn-block btn-menu'\r\n      >\r\n        Edit Questions\r\n      </Link>\r\n      <Link\r\n        to={`${prefix}/leaderboard`}\r\n        className='btn btn-danger btn-block btn-menu'\r\n      >\r\n        Leader Board\r\n      </Link>\r\n    </div>\r\n  );\r\n};\r\n\r\nHome.propTypes = {\r\n  setAlert: PropTypes.func.isRequired,\r\n  getQuestions: PropTypes.func.isRequired,\r\n  questions: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  questions: state.questions\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n  setAlert,\r\n  getQuestions\r\n})(Home);\r\n","import {\r\n  SET_NAME,\r\n  SET_SCORE,\r\n  CLEAR_USER,\r\n  SET_CURRENT_ANSWER,\r\n  CLEAR_CURRENT_ANSWER\r\n} from './types';\r\n\r\nexport const setName = (name) => {\r\n  return {\r\n    type: SET_NAME,\r\n    payload: name\r\n  };\r\n};\r\n\r\nexport const setScore = (score) => {\r\n  return {\r\n    type: SET_SCORE,\r\n    payload: score\r\n  };\r\n};\r\n\r\nexport const setCurrentAnswer = (answer) => {\r\n  return {\r\n    type: SET_CURRENT_ANSWER,\r\n    payload: answer\r\n  };\r\n};\r\n\r\nexport const clearCurrentAnswer = () => {\r\n  return {\r\n    type: CLEAR_CURRENT_ANSWER\r\n  };\r\n};\r\n\r\nexport const clearUser = () => {\r\n  return {\r\n    type: CLEAR_USER\r\n  };\r\n};\r\n","import React, { Fragment } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Form } from 'react-bootstrap';\r\nimport { prefix } from '../../config';\r\nimport { connect } from 'react-redux';\r\nimport { setName, clearUser } from '../../actions/userActions';\r\nimport { setAlert } from '../../actions/alertActions';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport Alerts from '../layout/alert/Alerts';\r\n\r\nconst NameForm = ({ user: { name }, setName, clearUser, setAlert }) => {\r\n  const onChange = (e) => {\r\n    setName(e.target.value);\r\n  };\r\n\r\n  const checkForm = (e) => {\r\n    if (name === '') {\r\n      e.preventDefault();\r\n      const alert = {\r\n        msg: 'Please insert your name',\r\n        type: 'danger'\r\n      };\r\n      setAlert(alert);\r\n    }\r\n  };\r\n  return (\r\n    <div className='menu flex-center-center-column'>\r\n      <div className='name-alert'>\r\n        <Alerts />\r\n      </div>\r\n      <Form className='bg-primary name-form'>\r\n        <Form.Group controlId='name'>\r\n          <Form.Label>Name:</Form.Label>\r\n          <Form.Control\r\n            type='text'\r\n            className='form-rounded'\r\n            onChange={onChange}\r\n            value={name}\r\n          />\r\n        </Form.Group>\r\n        <div className='d-flex justify-content-between px'>\r\n          <Link\r\n            to={`${prefix}/`}\r\n            className='btn btn-danger btn-rounded'\r\n            onClick={clearUser}\r\n          >\r\n            Back\r\n          </Link>\r\n          <Link\r\n            to={`${prefix}/quiz`}\r\n            type='submit'\r\n            className='btn btn-success btn-rounded'\r\n            style={{ width: '11rem' }}\r\n            onClick={checkForm}\r\n          >\r\n            Let's Go\r\n          </Link>\r\n        </div>\r\n      </Form>\r\n    </div>\r\n  );\r\n};\r\n\r\nNameForm.propTypes = {\r\n  user: PropTypes.object.isRequired,\r\n  setName: PropTypes.func.isRequired,\r\n  clearUser: PropTypes.func.isRequired,\r\n  setAlert: PropTypes.func.isRequired\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  user: state.user\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n  setName,\r\n  clearUser,\r\n  setAlert\r\n})(NameForm);\r\n","import React, {useEffect} from 'react'\r\n\r\nconst Leaderboard = () => {\r\n  useEffect(() => {\r\n    document.body.id = 'bb1';\r\n    //eslint-disable-next-line\r\n  }, []);\r\n  \r\n  return (\r\n    <div>\r\n      <h1>Leader Board</h1>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Leaderboard\r\n","import React from 'react';\r\nimport { Button } from 'react-bootstrap';\r\nimport { connect } from 'react-redux';\r\nimport {\r\n  setCurrent,\r\n  clearCurrent,\r\n  deleteQuestion\r\n} from '../../actions/questionActions';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst QuestionItem = ({\r\n  question,\r\n  deleteQuestion,\r\n  setCurrent,\r\n  clearCurrent\r\n}) => {\r\n  const onDelete = () => {\r\n    deleteQuestion(question.id);\r\n    clearCurrent();\r\n  };\r\n\r\n  return (\r\n    <li className='question-item d-flex justify-content-between'>\r\n      <div className='question-item-text'>{question.question}</div>\r\n      <div>\r\n        <Button\r\n          variant={'outline-danger'}\r\n          className='question-btn question-delete-btn'\r\n          onClick={onDelete}\r\n        >\r\n          <i className='fas fa-trash'></i>\r\n        </Button>\r\n        <Button\r\n          variant={'outline-info'}\r\n          className='question-btn question-edit-btn'\r\n          onClick={() => {\r\n            setCurrent(question);\r\n          }}\r\n        >\r\n          <i className='far fa-edit'></i>\r\n        </Button>\r\n      </div>\r\n    </li>\r\n  );\r\n};\r\n\r\nQuestionItem.propTypes = {\r\n  question: PropTypes.object.isRequired,\r\n  deleteQuestion: PropTypes.func.isRequired,\r\n  setCurrent: PropTypes.func.isRequired\r\n};\r\n\r\nexport default connect(null, {\r\n  setCurrent,\r\n  deleteQuestion,\r\n  clearCurrent\r\n})(QuestionItem);\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Form, Row, Col, Button } from 'react-bootstrap';\r\nimport { connect } from 'react-redux';\r\nimport {\r\n  addQuestion,\r\n  updateQuestion,\r\n  clearCurrent\r\n} from '../../actions/questionActions';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst QuestionForm = ({\r\n  current,\r\n  addQuestion,\r\n  updateQuestion,\r\n  clearCurrent\r\n}) => {\r\n  const [question, setQuestion] = useState('');\r\n  const [answers, setAnswers] = useState([\r\n    { id: 1, answer: '', correct: false },\r\n    { id: 2, answer: '', correct: false },\r\n    { id: 3, answer: '', correct: false },\r\n    { id: 4, answer: '', correct: false }\r\n  ]);\r\n\r\n  useEffect(() => {\r\n    if (current) {\r\n      setQuestion(current.question);\r\n      setAnswers(current.answers);\r\n    } else {\r\n      clearFields();\r\n    }\r\n  }, [current]);\r\n\r\n  const onSubmit = () => {\r\n    if (validateForm()) {\r\n      let newQuestion = {\r\n        question,\r\n        answers\r\n      };\r\n\r\n      if (current !== null) {\r\n        // UPDATE QUESTION\r\n        newQuestion.id = current.id;\r\n        updateQuestion(newQuestion);\r\n      } else {\r\n        // ADD QUESTION\r\n        addQuestion(newQuestion);\r\n      }\r\n      clearFields();\r\n      clearCurrent();\r\n    } else {\r\n      console.log('Input error');\r\n    }\r\n  };\r\n\r\n  const setAnswerText = (id, text) => {\r\n    let result = [...answers];\r\n    result.find((a) => a.id === id).answer = text;\r\n    setAnswers(result);\r\n  };\r\n\r\n  const setCorrectAnswer = (id) => {\r\n    let result = [];\r\n    answers.map((a) => {\r\n      if (a.id === id) {\r\n        result.push({ id: a.id, answer: a.answer, correct: true });\r\n      } else {\r\n        result.push({ id: a.id, answer: a.answer, correct: false });\r\n      }\r\n    });\r\n    setAnswers(result);\r\n  };\r\n\r\n  const clearFields = () => {\r\n    setQuestion('');\r\n    setAnswers([\r\n      { id: 1, answer: '', correct: false },\r\n      { id: 2, answer: '', correct: false },\r\n      { id: 3, answer: '', correct: false },\r\n      { id: 4, answer: '', correct: false }\r\n    ]);\r\n  };\r\n\r\n  const validateForm = () => {\r\n    if (!question || question === '' || !answers || answers.length !== 4)\r\n      return false;\r\n    let thereIsACorrect = false;\r\n    for (let i = 0; i < answers.length; i++) {\r\n      if (!answers[i].id) return false;\r\n      if (!answers[i].answer || answers[i].answer === '') return false;\r\n      if (answers[i].correct !== true && answers[i].correct !== false)\r\n        return false;\r\n      if (answers[i].correct === true) thereIsACorrect = true;\r\n    }\r\n    if (!thereIsACorrect) return false;\r\n    return true;\r\n  };\r\n\r\n  return (\r\n    <Form className='question-form flex-center-center-column'>\r\n      <h5 className='form-label'>Question</h5>\r\n      <Row className='w-100 my-2'>\r\n        <Col>\r\n          <Form.Control\r\n            type='text'\r\n            placeholder='Enter your question'\r\n            className='form-rounded'\r\n            value={question}\r\n            onChange={(e) => setQuestion(e.target.value)}\r\n          />\r\n        </Col>\r\n      </Row>\r\n\r\n      <h5 className='form-label mt-3'>Answers</h5>\r\n      {/* Answers */}\r\n      {answers.map((a) => {\r\n        return (\r\n          <Row className='w-100 my-2' key={a.id}>\r\n            <Col xs>\r\n              <Form.Control\r\n                className='form-rounded'\r\n                type='text'\r\n                placeholder='Enter your answer'\r\n                value={a.answer}\r\n                onChange={(e) => setAnswerText(a.id, e.target.value)}\r\n              />\r\n            </Col>\r\n            <Col xs={1}>\r\n              <Form.Check\r\n                type='radio'\r\n                name='right-answer'\r\n                id='answer0-radio'\r\n                value={a.correct}\r\n                checked={a.correct}\r\n                onChange={() => setCorrectAnswer(a.id)}\r\n              />\r\n            </Col>\r\n          </Row>\r\n        );\r\n      })}\r\n\r\n      {/* Buttons */}\r\n      <Row className='my-2'>\r\n        <Col>\r\n          <Button\r\n            variant='danger'\r\n            block\r\n            className='btn-rounded'\r\n            onClick={() => {\r\n              clearCurrent();\r\n              clearFields();\r\n            }}\r\n          >\r\n            Clear\r\n          </Button>\r\n        </Col>\r\n        <Col>\r\n          <Button\r\n            variant={!validateForm() ? 'dark' : 'success'}\r\n            block\r\n            className='btn-rounded'\r\n            onClick={onSubmit}\r\n            disabled={!validateForm()}\r\n          >\r\n            Save\r\n          </Button>\r\n        </Col>\r\n      </Row>\r\n    </Form>\r\n  );\r\n};\r\n\r\nQuestionForm.propTypes = {\r\n  current: PropTypes.object,\r\n  addQuestion: PropTypes.func.isRequired,\r\n  updateQuestion: PropTypes.func.isRequired,\r\n  clearCurrent: PropTypes.func.isRequired\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  current: state.questions.current\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n  addQuestion,\r\n  updateQuestion,\r\n  clearCurrent\r\n})(QuestionForm);\r\n","import React, { useEffect } from 'react';\r\nimport QuestionItem from './QuestionItem';\r\nimport QuestionForm from './QuestionForm';\r\nimport { connect } from 'react-redux';\r\nimport { getQuestions } from '../../actions/questionActions';\r\nimport PropTypes from 'prop-types';\r\nimport { Link } from 'react-router-dom';\r\nimport { prefix } from '../../config';\r\n\r\nconst Questions = ({ questions: { questions, current }, getQuestions }) => {\r\n  useEffect(() => {\r\n    document.body.id = 'bb1';\r\n    getQuestions();\r\n    //eslint-disable-next-line\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <div className='d-flex justify-content-between'>\r\n        <h1>Questions</h1>\r\n        <div className='my-auto'>\r\n          <Link to={`${prefix}/`} className='btn btn-primary btn-rounded'>\r\n            Home\r\n          </Link>\r\n        </div>\r\n      </div>\r\n\r\n      <ul className='question-list'>\r\n        {questions !== null && questions.length !== 0 ? (\r\n          questions.map((question) => (\r\n            <QuestionItem key={question.id} question={question} />\r\n          ))\r\n        ) : (\r\n          <h3>No questions to show</h3>\r\n        )}\r\n      </ul>\r\n\r\n      <hr className='my-5' />\r\n\r\n      <QuestionForm />\r\n    </div>\r\n  );\r\n};\r\n\r\nQuestions.propTypes = {\r\n  questions: PropTypes.object.isRequired,\r\n  getQuestions: PropTypes.func.isRequired\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  questions: state.questions\r\n});\r\n\r\nexport default connect(mapStateToProps, { getQuestions })(Questions);\r\n","import React from 'react';\r\nimport { Container, Row, Button, Col } from 'react-bootstrap';\r\nimport { connect } from 'react-redux';\r\nimport { setCurrentAnswer } from '../../actions/userActions';\r\nimport { setScore } from '../../actions/userActions';\r\nimport { points_for_correct_answers } from '../../config';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Quiz = ({\r\n  question: { id, question, answers },\r\n  user: { currentAnswer, score },\r\n  setCurrentAnswer,\r\n  setScore\r\n}) => {\r\n  return (\r\n    <Container fluid>\r\n      <Row className='mb-5'>\r\n        {/* The Question */}\r\n        <Col className='quiz-item'>{question}</Col>\r\n      </Row>\r\n      {/* The Answers */}\r\n      <Row className='justify-content-between'>\r\n        {answers.map((a) => (\r\n          <Col\r\n            key={a.id}\r\n            lg={6}\r\n            className={[\r\n              'my-3',\r\n              a.id % 2 === 1 ? 'pr-lg-3 pl-lg-0' : 'pr-lg-0 pl-lg-3'\r\n            ]}\r\n          >\r\n            <Button\r\n              className={[\r\n                'd-block answer-item btn-rounded',\r\n                currentAnswer !== null &&\r\n                  (a.correct\r\n                    ? 'btn-success'\r\n                    : currentAnswer.answerId === a.id\r\n                    ? 'btn-primary'\r\n                    : 'bg-white')\r\n              ]}\r\n              onClick={() => {\r\n                setCurrentAnswer({ questionId: id, answerId: a.id });\r\n                if (a.correct && setScore(score + points_for_correct_answers));\r\n              }}\r\n              disabled={currentAnswer !== null}\r\n            >\r\n              {a.answer}\r\n            </Button>\r\n          </Col>\r\n        ))}\r\n      </Row>\r\n    </Container>\r\n  );\r\n};\r\n\r\nQuiz.propTypes = {\r\n  question: PropTypes.object.isRequired,\r\n  setCurrentAnswer: PropTypes.func.isRequired,\r\n  user: PropTypes.object.isRequired,\r\n  setScore: PropTypes.func.isRequired\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  user: state.user\r\n});\r\n\r\nexport default connect(mapStateToProps, { setCurrentAnswer, setScore })(Quiz);\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Button } from 'react-bootstrap';\r\nimport QuizItem from './QuizItem';\r\nimport { connect } from 'react-redux';\r\nimport { clearCurrent, getQuestions } from '../../actions/questionActions';\r\nimport { clearCurrentAnswer, clearUser } from '../../actions/userActions';\r\nimport PropTypes from 'prop-types';\r\nimport { Link } from 'react-router-dom';\r\nimport { prefix } from '../../config';\r\n\r\nconst QuizMenu = ({\r\n  questions,\r\n  loading,\r\n  user: { score, currentAnswer },\r\n  getQuestions,\r\n  clearCurrent,\r\n  clearCurrentAnswer,\r\n  clearUser\r\n}) => {\r\n  const [questionIndex, setQuestionIndex] = useState(0);\r\n\r\n  useEffect(() => {\r\n    getQuestions();\r\n    //eslint-disable-next-line\r\n  }, []);\r\n\r\n  const nextOnClick = () => {\r\n    if (!thisIsTheLastQuestion()) {\r\n      let currIndex = questionIndex;\r\n      setQuestionIndex((currIndex += 1));\r\n      clearCurrentAnswer();\r\n    }\r\n  };\r\n\r\n  const thisIsTheLastQuestion = () => {\r\n    if (questionIndex === questions.length - 1) return true;\r\n    else return false;\r\n  };\r\n\r\n  const onExit = () => {\r\n    clearUser();\r\n    clearCurrent();\r\n  };\r\n\r\n  if (loading || questions === null) {\r\n    return (\r\n      <div className='menu flex-center-center-column'>\r\n        <h3>Loading...</h3>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className='quiz-menu flex-center-center-column'>\r\n      <QuizItem question={questions[questionIndex]} />\r\n      <div className='w-100 d-flex justify-content-between'>\r\n        <div className='btn-rounded bg-secondary btn-score'>Score: {score}</div>\r\n        {/* Next Button or Leader Board*/}\r\n        {currentAnswer !== null &&\r\n          (!thisIsTheLastQuestion() ? (\r\n            <Button className='d-block btn-rounded' onClick={nextOnClick}>\r\n              Next\r\n            </Button>\r\n          ) : (\r\n            <div>\r\n              <Link\r\n                to={`${prefix}/leaderboard`}\r\n                className='btn btn-info btn-rounded mr-1 mr-sm-3'\r\n                onClick={onExit}\r\n              >\r\n                Leader Board\r\n              </Link>\r\n              <Link\r\n                to={`${prefix}/`}\r\n                className='btn btn-primary btn-rounded'\r\n                onClick={onExit}\r\n              >\r\n                Home\r\n              </Link>\r\n            </div>\r\n          ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nQuizMenu.propTypes = {\r\n  questions: PropTypes.array,\r\n  loading: PropTypes.bool.isRequired,\r\n  user: PropTypes.object.isRequired,\r\n  getQuestions: PropTypes.func.isRequired,\r\n  clearCurrentAnswer: PropTypes.func.isRequired,\r\n  clearUser: PropTypes.func.isRequired,\r\n  clearCurrent: PropTypes.func.isRequired\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  questions: state.questions.questions,\r\n  loading: state.questions.loading,\r\n  user: state.user\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n  getQuestions,\r\n  clearCurrentAnswer,\r\n  clearUser,\r\n  clearCurrent\r\n})(QuizMenu);\r\n","import React from 'react';\nimport './App.css';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport PrivateRoute from './components/routing/PrivateRoute';\nimport { prefix } from './config';\nimport { Container, Row } from 'react-bootstrap';\n\nimport Home from './components/pages/Home';\nimport NameForm from './components/pages/NameForm';\nimport Leaderboard from './components/leaderboard/Leaderboard';\nimport Questions from './components/questions/Questions';\nimport QuizMenu from './components/quiz/QuizMenu';\n\nconst App = () => {\n  return (\n    <Router>\n      <Container>\n        <Switch>\n          <Route exact path={`${prefix}/`} component={Home} />\n          <Route exact path={`${prefix}/name`} component={NameForm} />\n          <PrivateRoute exact path={`${prefix}/quiz`} component={QuizMenu} />\n          <Route exact path={`${prefix}/leaderboard`} component={Leaderboard} />\n          <Route exact path={`${prefix}/questions`} component={Questions} />\n        </Switch>\n      </Container>\n    </Router>\n  );\n};\n\nexport default App;\n","import {\r\n  SET_NAME,\r\n  SET_SCORE,\r\n  CLEAR_USER,\r\n  SET_CURRENT_ANSWER,\r\n  CLEAR_CURRENT_ANSWER\r\n} from '../actions/types';\r\n\r\nconst initialState = {\r\n  name: '',\r\n  score: 0,\r\n  currentAnswer: null\r\n};\r\n\r\nexport default (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case SET_NAME:\r\n      return {\r\n        ...state,\r\n        name: action.payload\r\n      };\r\n    case SET_SCORE:\r\n      return {\r\n        ...state,\r\n        score: action.payload\r\n      };\r\n    case SET_CURRENT_ANSWER:\r\n      return {\r\n        ...state,\r\n        currentAnswer: action.payload\r\n      };\r\n    case CLEAR_CURRENT_ANSWER:\r\n      return {\r\n        ...state,\r\n        currentAnswer: null\r\n      };\r\n    case CLEAR_USER:\r\n      return {\r\n        name: '',\r\n        score: 0,\r\n        currentAnswer: null\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import {\r\n  GET_QUESTIONS,\r\n  SEARCH_QUESTION,\r\n  ADD_QUESTION,\r\n  UPDATE_QUESTION,\r\n  DELETE_QUESTION,\r\n  SET_CURRENT_QUESTION,\r\n  CLEAR_CURRENT_QUESTION,\r\n  QUESTIONS_ERROR,\r\n  SET_LOADING\r\n} from '../actions/types';\r\n\r\nconst initialState = {\r\n  questions: null,\r\n  current: null,\r\n  error: null,\r\n  loading: false\r\n};\r\n\r\nexport default (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case GET_QUESTIONS:\r\n      return {\r\n        ...state,\r\n        questions: action.payload,\r\n        loading: false\r\n      };\r\n    case ADD_QUESTION:\r\n      return {\r\n        ...state,\r\n        questions: [...state.questions, action.payload],\r\n        loading: false\r\n      };\r\n    case DELETE_QUESTION:\r\n      return {\r\n        ...state,\r\n        questions: state.questions.filter(\r\n          (question) => question.id !== action.payload\r\n        ),\r\n        loading: false\r\n      };\r\n    case UPDATE_QUESTION:\r\n      return {\r\n        ...state,\r\n        questions: state.questions.map((question) =>\r\n          question.id === action.payload.id ? action.payload : question\r\n        ),\r\n        loading: false\r\n      };\r\n    case SEARCH_QUESTION:\r\n      return {\r\n        ...state,\r\n        questions: action.payload\r\n      };\r\n    case SET_CURRENT_QUESTION:\r\n      return {\r\n        ...state,\r\n        current: action.payload\r\n      };\r\n    case CLEAR_CURRENT_QUESTION:\r\n      return {\r\n        ...state,\r\n        current: null\r\n      };\r\n    case QUESTIONS_ERROR:\r\n      console.error(action.payload);\r\n      return {\r\n        ...state,\r\n        error: action.payload\r\n      };\r\n    case SET_LOADING:\r\n      return {\r\n        ...state,\r\n        loading: true\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { combineReducers } from 'redux';\r\nimport userReducer from './userReducer';\r\nimport alertReducer from './alertReducer';\r\nimport questionReducer from './questionReducer';\r\n\r\nexport default combineReducers({\r\n  user: userReducer,\r\n  alerts: alertReducer,\r\n  questions: questionReducer\r\n});\r\n","import { SET_ALERT, REMOVE_ALERT } from '../actions/types';\r\n\r\nexport default (state = [], action) => {\r\n  switch (action.type) {\r\n    case SET_ALERT:\r\n      return [...state, action.payload];\r\n    case REMOVE_ALERT:\r\n      return state.filter((alert) => alert.id !== action.payload.id);\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { createStore, applyMiddleware } from 'redux';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport thunk from 'redux-thunk';\r\nimport rootReducer from './reducers';\r\n\r\nconst initialState = {};\r\nconst middleware = [thunk];\r\nconst store = createStore(\r\n  rootReducer,\r\n  initialState,\r\n  composeWithDevTools(applyMiddleware(...middleware))\r\n);\r\n\r\nexport default store;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './custom.scss';\nimport App from './App';\nimport { Provider } from 'react-redux';\nimport store from './store';\n\nReactDOM.render(\n  <Provider store={store}>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}